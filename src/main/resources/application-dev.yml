spring:
  config:
    activate:
      on-profile: dev

  sql:
    init:
      mode: always # 자동으로 스키마 초기화 스크립트를 실행
      continue-on-error: true # 실행 도중에 “테이블이 이미 존재한다” 같은 SQL 오류가 발생해도, 애플리케이션 기동을 중단하지 않고 계속 진행
      schema-locations: # 실제로 실행할 스키마(DDL) 파일 경로 목록
        - classpath:org/springframework/batch/core/schema-postgresql.sql

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data:
    mongodb:
      uri: ${MONGO_URI}
      auto-index-creation: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    software.amazon.awssdk: DEBUG # AWS SDK의 코어 기능(인증, 시그니처 생성, 리트라이 전략, 인터셉터 등) 전반에 걸친 디버그 로그
    software.amazon.awssdk.http: DEBUG # HTTP 클라이언트(요청·응답 전송) 레벨의 디버그 로그

management:
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
  health:
    mongo:
      enabled: false

naver:
  api:
    url: https://openapi.naver.com/v1/search/news.json  # 네이버 뉴스 API
    client-id: ${NAVER_CLIENT_ID}                    # 발급받은 Client ID
    client-secret: ${NAVER_CLIENT_SECRET}                   # 발급받은 Client Secret

rss:
  feeds:
    - name: HANKYUNG
      url: https://www.hankyung.com/feed/all-news
    - name: YEONHAP
      url: https://www.yna.co.kr/rss/news.xml
    - name: YEONHAP_POLITICS
      url: https://www.yna.co.kr/rss/politics.xml
    - name: JTBC
      url: https://news-ex.jtbc.co.kr/v1/get/rss/issue

cron:
  news: "0 0 * * * *"   #매시간 정각(00:00, 01:00, 02:00…23:00)
  backup: "0 0 0 * * *"   # 정각


